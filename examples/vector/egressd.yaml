apiVersion: v1
kind: ConfigMap
metadata:
  name: egressd-vector-config
data:
  vector-config.yaml: |
    sources:
      logs:
        type: file
        ignore_older_secs: 600
        include:
          - /var/run/egressd/egressd.log
        read_from: end
    
    transforms:
      events:
        type: remap
        inputs:
          - logs
        source: |-
          . = parse_json!(string!(.message))

    sinks:
      vector_aggregator:
        type: vector
        inputs:
          - events
        address: vector-egressd-headless.egressd.svc.cluster.local:6000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: egressd
  labels:
    app.kubernetes.io/name: egressd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: egressd
  labels:
    app.kubernetes.io/name: egressd
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: egressd
  labels:
    app.kubernetes.io/name: egressd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: egressd
subjects:
  - kind: ServiceAccount
    name: egressd
    namespace: egressd
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: egressd
  labels:
    app.kubernetes.io/name: egressd
spec:
  selector:
    matchLabels:
      name: egressd
  template:
    metadata:
      labels:
        name: egressd
    spec:
      serviceAccountName: egressd
      hostNetwork: true
      initContainers:
        - name: egressdinit
          image: busybox:1.35.0
          args:
            - "/bin/echo"
            - "1"
            - "/proc/sys/net/netfilter/nf_conntrack_acct"
      containers:
        - name: egressd
          image: "ghcr.io/castai/egressd:am1"
          imagePullPolicy: Always
          args:
            - "/usr/local/bin/egressd"
            - "-cilium"
            - "true"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_MODULE
            privileged: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /hostnet
              name: nf-conntrack
            - mountPath: /hostproc/sys/net/netfilter
              name: netfilter
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /var/run/egressd
              name: export-logs
        - name: export
          image: timberio/vector:0.25.1-alpine
          imagePullPolicy: IfNotPresent
          args:
            - --config
            - /vector/vector-config.yaml
          command:
            - vector
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/egressd
              name: export-logs
              readOnly: true
            - mountPath: /vector
              name: egressd-vector-config
              readOnly: true
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
        - name: nf-conntrack
          hostPath:
            path: /proc/net
        - name: netfilter
          hostPath:
            path: /proc/sys/net/netfilter
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        - name: export-logs
          hostPath:
            path: /var/run/egressd
            type: DirectoryOrCreate
        - configMap:
            defaultMode: 420
            items:
              - key: vector-config.yaml
                path: vector-config.yaml
            name: egressd-vector-config
          name: egressd-vector-config
